# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import services.rpc.magicms_pb2 as magicms__pb2


class GreeterStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOnline = channel.unary_unary(
                '/rpcclient.Greeter/GetOnline',
                request_serializer=magicms__pb2.Empty.SerializeToString,
                response_deserializer=magicms__pb2.OnlineReply.FromString,
                )
        self.BanUser = channel.unary_unary(
                '/rpcclient.Greeter/BanUser',
                request_serializer=magicms__pb2.CommonRequest.SerializeToString,
                response_deserializer=magicms__pb2.CommonReply.FromString,
                )
        self.GiveNX = channel.unary_unary(
                '/rpcclient.Greeter/GiveNX',
                request_serializer=magicms__pb2.NxRequest.SerializeToString,
                response_deserializer=magicms__pb2.CommonReply.FromString,
                )
        self.GetCharacterInfo = channel.unary_unary(
                '/rpcclient.Greeter/GetCharacterInfo',
                request_serializer=magicms__pb2.CommonRequest.SerializeToString,
                response_deserializer=magicms__pb2.CharacterReply.FromString,
                )
        self.ClearSlot = channel.unary_unary(
                '/rpcclient.Greeter/ClearSlot',
                request_serializer=magicms__pb2.CommonRequest.SerializeToString,
                response_deserializer=magicms__pb2.CommonReply.FromString,
                )
        self.Disconnect = channel.unary_unary(
                '/rpcclient.Greeter/Disconnect',
                request_serializer=magicms__pb2.CommonRequest.SerializeToString,
                response_deserializer=magicms__pb2.CommonReply.FromString,
                )
        self.Message = channel.unary_unary(
                '/rpcclient.Greeter/Message',
                request_serializer=magicms__pb2.MessageRequest.SerializeToString,
                response_deserializer=magicms__pb2.CommonReply.FromString,
                )
        self.GetMerchantShop = channel.unary_unary(
                '/rpcclient.Greeter/GetMerchantShop',
                request_serializer=magicms__pb2.Empty.SerializeToString,
                response_deserializer=magicms__pb2.MerchantReply.FromString,
                )
        self.Execute = channel.unary_unary(
                '/rpcclient.Greeter/Execute',
                request_serializer=magicms__pb2.CommandRequest.SerializeToString,
                response_deserializer=magicms__pb2.CommonReply.FromString,
                )


class GreeterServicer(object):
    """The greeting service definition.
    """

    def GetOnline(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BanUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GiveNX(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCharacterInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearSlot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Disconnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Message(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMerchantShop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Execute(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOnline': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOnline,
                    request_deserializer=magicms__pb2.Empty.FromString,
                    response_serializer=magicms__pb2.OnlineReply.SerializeToString,
            ),
            'BanUser': grpc.unary_unary_rpc_method_handler(
                    servicer.BanUser,
                    request_deserializer=magicms__pb2.CommonRequest.FromString,
                    response_serializer=magicms__pb2.CommonReply.SerializeToString,
            ),
            'GiveNX': grpc.unary_unary_rpc_method_handler(
                    servicer.GiveNX,
                    request_deserializer=magicms__pb2.NxRequest.FromString,
                    response_serializer=magicms__pb2.CommonReply.SerializeToString,
            ),
            'GetCharacterInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCharacterInfo,
                    request_deserializer=magicms__pb2.CommonRequest.FromString,
                    response_serializer=magicms__pb2.CharacterReply.SerializeToString,
            ),
            'ClearSlot': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearSlot,
                    request_deserializer=magicms__pb2.CommonRequest.FromString,
                    response_serializer=magicms__pb2.CommonReply.SerializeToString,
            ),
            'Disconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.Disconnect,
                    request_deserializer=magicms__pb2.CommonRequest.FromString,
                    response_serializer=magicms__pb2.CommonReply.SerializeToString,
            ),
            'Message': grpc.unary_unary_rpc_method_handler(
                    servicer.Message,
                    request_deserializer=magicms__pb2.MessageRequest.FromString,
                    response_serializer=magicms__pb2.CommonReply.SerializeToString,
            ),
            'GetMerchantShop': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMerchantShop,
                    request_deserializer=magicms__pb2.Empty.FromString,
                    response_serializer=magicms__pb2.MerchantReply.SerializeToString,
            ),
            'Execute': grpc.unary_unary_rpc_method_handler(
                    servicer.Execute,
                    request_deserializer=magicms__pb2.CommandRequest.FromString,
                    response_serializer=magicms__pb2.CommonReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rpcclient.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """The greeting service definition.
    """

    @staticmethod
    def GetOnline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpcclient.Greeter/GetOnline',
            magicms__pb2.Empty.SerializeToString,
            magicms__pb2.OnlineReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BanUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpcclient.Greeter/BanUser',
            magicms__pb2.CommonRequest.SerializeToString,
            magicms__pb2.CommonReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GiveNX(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpcclient.Greeter/GiveNX',
            magicms__pb2.NxRequest.SerializeToString,
            magicms__pb2.CommonReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCharacterInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpcclient.Greeter/GetCharacterInfo',
            magicms__pb2.CommonRequest.SerializeToString,
            magicms__pb2.CharacterReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearSlot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpcclient.Greeter/ClearSlot',
            magicms__pb2.CommonRequest.SerializeToString,
            magicms__pb2.CommonReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Disconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpcclient.Greeter/Disconnect',
            magicms__pb2.CommonRequest.SerializeToString,
            magicms__pb2.CommonReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Message(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpcclient.Greeter/Message',
            magicms__pb2.MessageRequest.SerializeToString,
            magicms__pb2.CommonReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMerchantShop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpcclient.Greeter/GetMerchantShop',
            magicms__pb2.Empty.SerializeToString,
            magicms__pb2.MerchantReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Execute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rpcclient.Greeter/Execute',
            magicms__pb2.CommandRequest.SerializeToString,
            magicms__pb2.CommonReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
